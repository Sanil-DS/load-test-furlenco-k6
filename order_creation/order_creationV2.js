// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import papaparse from "./libs/papaparse.js";
import { group } from "k6";

export let options = {
  maxRedirects: 1,
  noVUConnectionReuse: true,
  vus: 2,
  ext: {
    loadimpact: {
      projectID: 3630700,
      // Test runs with the same name groups test runs together
      name: "ORDER LOAD"
    }
  }
};

const file = (() => {
  // Load data file
  const text = open("./data.csv");
  const rows = papaparse.parse(text, { header: true }).data;
  return rows;
})();
options.iterations = file.length;

const Iteration = Symbol.for("iteration");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    pincode: "560075",
    latitude: "",
    longitude: "",
    url: "https://st-ciago.furlenco.com",
    ghost_token: "",
    "x-panem-token": "",
    userId: "",
    cartID: "",
    deliveryAddressID: "",
    paymentID: "",
    paymentAmount: "",
    orderID: "",
    cartCheckOutID: "",
    orderDisplayID: "",
    personelID: "",
    productID: "17,122,110,107,116,101,23,35,113,20,29",
    "x-gatekeeper-token": "",
    citiID: "1",
    mozart: "https://st-mozart.furlenco.com",
    fortknox: "https://st-fortknox.furlenco.com",
    LMS_URL: "https://st-lms-api.furlenco.com",
    random_cap: "",
    phoneNumber2: ""
  },
  data: file
});

export default function () {
  postman[Iteration]();

  group("create-user-order", function () {
    postman[Request]({
      name: "0.0 Meta",
      id: "65095175-52d2-4e8a-b152-ae015ca399a4",
      method: "GET",
      address: "{{url}}/api/v1/meta",
      headers: {
        "x-city-id": "{{citiID}}",
        "x-pincode": "{{pincode}}",
        "x-panem-token": ""
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable(
          "ghost_token",
          jsonData.data.meta.ghost_user.ghost_identifier
        );
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("0.0 Meta : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "0.1 - Login",
      id: "94d6109f-3764-4714-b25a-e8dbd9defdbd",
      method: "POST",
      address: "{{url}}/api/v1/users/verify-account",
      data: '{\n  "account": "{{phoneNumber2}}"\n}',
      headers: {
        accept: "application/json",
        "Content-Type": "application/json",
        "x-ghost-identifier": "{{ghost_token}}",
        "x-panem-token": ""
      },
      pre() {
        const randomNumber = Math.floor(Math.random() * 90000000) + 10000000;
        const phoneNumber = "99" + randomNumber.toString();
        postman.setEnvironmentVariable("phoneNumber2", phoneNumber);
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("0.1 - Login : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "0.2 otp",
      id: "8f459c76-2368-441b-9cbc-2bc302d989ad",
      method: "POST",
      address: "{{url}}/api/v1/users/verify-otp",
      data: '{\n  "account": "{{phoneNumber2}}",\n  "otp": "1234"\n}',
      headers: {
        accept: "application/json",
        "Content-Type": "application/json",
        "x-ghost-identifier": "{{ghost_token}}",
        "x-panem-token": ""
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("0.2 otp : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "0.3 register",
      id: "79cfbcc9-0b9e-4af7-a097-35f765fb87bb",
      method: "POST",
      address: "{{url}}/api/v1/users/register",
      data:
        '{\n  "contact_no": "{{phoneNumber2}}",\n  "email_id": "destroyer_san5-{{phoneNumber2}}@furlenco.com",\n  "name": "destroyer_san5-{{$randomFirstName}}"\n}',
      headers: {
        accept: "application/json",
        "Content-Type": "application/json",
        "x-ghost-identifier": "{{ghost_token}}",
        "x-panem-token": ""
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable(
          "x-panem-token",
          jsonData.data.user.session_token.token
        );
        postman.setEnvironmentVariable("userId", jsonData.data.user.id);
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("0.3 register : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "1. get-cart",
      id: "a3bea6de-d4be-45f5-81e7-14037d45707f",
      method: "GET",
      address: "{{url}}/api/v1/carts?cityId={{citiID}}&pincode={{pincode}}",
      headers: {
        "x-panem-token": "{{x-panem-token}}"
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable("cartID", jsonData.data.cart.id);
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("1. get-cart : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "2. add-item",
      id: "195a7860-d966-48c7-988c-42f6a2321fc9",
      method: "POST",
      address:
        "{{mozart}}/furlenco-checkout/api/carts/{{cartID}}/bulkCartItems?pincode={{pincode}}&cityId={{citiID}}",
      data: '[\n  {\n     "id": {{productID}},\n     "tenure":12\n  }\n]',
      headers: {
        "x-panem-token": "{{x-panem-token}}",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("2. add-item : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "3. add-address",
      id: "f5691dda-d022-4bcc-a697-7b1b5220b6ab",
      method: "POST",
      address: "{{url}}/api/v1/users/addresses",
      data:
        '{\n     "name": "HOK-HEAD",\n    "line1": "HOK",\n    "line2": "HOK",\n    "line3": "HOK",\n    "address":"HOK-TECH",\n    "contact_no": "{{phoneNumber2}}",\n    "city_name": "HOK CITY",\n    "pincode": "{{pincode}}",\n    "latitude": {{latitude}},\n    "longitude": {{longitude}},\n    "email_id": "destroyer-sanil@gmail.com",\n    "city_id": {{citiID}},\n    "floor": 4,\n    "service_lift_available": false,\n    "accommodation_type":"independent_house"\n}',
      headers: {
        "x-panem-token": "{{x-panem-token}}",
        "Content-Type": "application/json"
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable(
          "deliveryAddressID",
          jsonData.data.deliveryAddress.id
        );
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("3. add-address : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "4. add-address-to-cart",
      id: "1d3b6931-6e25-42e4-87a7-671215d474b7",
      method: "PUT",
      address:
        "{{url}}/api/v1/carts/{{cartID}}?cityId={{citiID}}&pincode={{pincode}}",
      data:
        '{\n  "billingAddressId": {{deliveryAddressID}},\n  "shippingAddressId": {{deliveryAddressID}},\n  "activeCart": "ALL"\n}',
      headers: {
        "x-panem-token": "{{x-panem-token}}",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("4. add-address-to-cart : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "5. createPayment",
      id: "802ca629-b522-44a0-9e21-f91b32e67253",
      method: "POST",
      address:
        "{{url}}/api/v1/carts/{{cartID}}/createPayment?cityId={{citiID}}&pincode={{pincode}}",
      data: '{\n    "gstin": ""\n}',
      headers: {
        "x-panem-token": "{{x-panem-token}}"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("5. createPayment : ✅ ")
        });

        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable(
          "paymentID",
          jsonData.data.paymentDetails.id
        );
        postman.setEnvironmentVariable(
          "paymentAmount",
          jsonData.data.paymentDetails.amount
        );
      }
    });

    postman[Request]({
      name: "6. create-checkout-order",
      id: "279d568c-3d83-481b-95cf-67108b581453",
      method: "POST",
      address:
        "{{url}}/api/v1/carts/{{cartID}}/create-checkout-order?cityId={{citiID}}&pincode={{pincode}}",
      headers: {
        "x-panem-token": "{{x-panem-token}}"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("6. create-checkout-orde : ✅ ")
        });

        var jsonData = JSON.parse(responseBody);
        postman.setEnvironmentVariable(
          "orderID",
          jsonData.data.order.orders[0].id
        );
        postman.setEnvironmentVariable(
          "cartCheckOutID",
          jsonData.data.order.id
        );
        postman.setEnvironmentVariable(
          "orderDisplayID",
          jsonData.data.order.orders[0].displayId
        );
      }
    });

    postman[Request]({
      name: "7. Payment",
      id: "3a1ad1d7-2b05-4f56-8882-70674361cb2b",
      method: "POST",
      address: "{{fortknox}}/debug/send-message/GRINGOTTS__PAYMENT_UPDATES",
      data:
        '{\n  "status": "COMPLETED",\n  "userActionType": "CART_CHECKOUT",\n  "publisherUUID": "{{$randomUUID}}",\n  "id": "{{paymentID}}",\n  "paid": {\n    "totalAmount": "{{paymentAmount}}",\n    "paymentOffers": [\n      {\n        "type": "NCEMI",\n        "amount": "717.01"\n      }\n    ],\n    "paymentInstruments": {\n      "CASH": "{{paymentAmount}}",\n      "FCASH": "0.00"\n    }\n  },\n  "paymentDetails": {\n    "id": "{{paymentID}}}"\n  }\n}\n',
      headers: {
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("7. Payment : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "8.KYC",
      id: "4e4ba1a5-a893-44f6-80dd-8433b4aade17",
      method: "POST",
      address: "{{fortknox}}/debug/send-message/DELPHI__KYC_UPDATES",
      data:
        '{\n    "kycState": "APPROVED",\n    "userId": {{userId}},\n    "publisherUUID": "{{$randomUUID}}",\n    "orderId": "{{orderID}}"\n}',
      headers: {
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          console.log("8.KYC : ✅ ")
        });
      }
    });

    postman[Request]({
      name: "logout",
      id: "72d4baef-7002-48c3-a151-1cd816513057",
      method: "DELETE",
      address: "https://st-ciago.furlenco.com/api/v1/users/logout",
      headers: {
        "x-panem-token": "{{x-panem-token}}",
        "x-city-id": "{{citiID}}",
        "x-pincode": "{{pincode}}"
      },
      post(response) {
        pm.test("Status code is 200", function () {
          pm.response.to.have.status(200);
          pm.environment.set("x-panem-token", "");
          console.log("9 .Logout : ✅ ")
        });
      }
    });
  });
  console.log("🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯🎯")
}
