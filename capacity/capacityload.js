// Auto-generated by the postman-to-k6 converter

import { sleep } from "k6";
import "./libs/shim/core.js";
import "./libs/shim/urijs.js";

export let options = {
  // stages: [
  //   { duration: "60s", target: 50 }
  // ],
  vus: 2,
  duration: '60s',
  ext: {
    loadimpact: {
      projectID: 3630700,
      // Test runs with the same name groups test runs together
      name: "CAPACITY LOAD"
    }
  }
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    url: "https://st-lms-api.furlenco.com",
    random_cap: ""
  }
});



export default function () {
  postman[Request]({
    name: "capacity-commitment",
    id: "8aeed348-b72b-4c68-a45d-8fbb53b4ae7e",
    method: "POST",
    address: "{{url}}/api/v1/capacity-commitment",
    data:
      '{\n  "spatialRequirementInCft": "10",\n  "temporalRequirementInMinutes": 10,\n  "sharedTemporalRequirementInMinutes": 10,\n  "deliveryCapacityCounter": 1,\n  "pickupCapacityCounter": 1,\n  "entityId": {{random_cap}},\n  "pincode": 560068,\n  "fulfillmentCenterId": 1,\n  "vertical": "FURLENCO_RENTAL",\n  "carrier": "GARUDA",\n  "selectedPromiseDate": "2023-04-21",\n  "logisticsType": "PICKUP",\n  "addressId": {{random_cap}},\n  "entityType": "ITEM"\n}',
    headers: {
      accept: "*/*",
      "Content-Type": "application/json"
    },
    pre() {
      pm.environment.set(
        "random_cap",
        Math.floor(Math.random() * 90000) + 10000
      );
    },
    post(response) {
      pm.test("Status code is 200", function () {
        pm.response.to.have.status(200);
      });
      pm.test("Status code is 422", function () {
        pm.response.to.have.status(422);
      });
      pm.test("Status code is 500", function () {
        pm.response.to.have.status(500);
      });
      if (pm.response.code != 200)
        console.log(`[${pm.response.code}]  :: ${JSON.stringify(JSON.parse(responseBody))}`);
    }
  });
  sleep(0.1)
}
